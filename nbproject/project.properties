ant.customtasks.libs=JWSAntTasks
debug.modulepath=\
    ${run.modulepath}
debug.test.modulepath=\
    ${run.test.modulepath}
#Fri Oct 28 15:24:50 EDT 2016
excludes=
javac.classpath=
javac.deprecation=false
javac.external.vm=false
javac.modulepath=\
    ${reference.com_jtconnors_socket.jar}
javac.processormodulepath=\
    ${javac.modulepath}
javac.test.modulepath=\
    ${javac.modulepath}:\
    ${build.classes.dir}
jnlp.enabled=false
build.test.results.dir=${build.dir}/test/results
jnlp.signing=generated
jnlp.signing.alias=Scoroard
jnlp.signing.keystore=
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
project.com_jtconnors_socket=../../projects-sockets/com.jtconnors.socket
reference.com_jtconnors_socket.jar=${project.com_jtconnors_socket}/dist/com.jtconnors.socket.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javadoc.nonavbar=false
dist.lib.dir=${dist.dir}/lib
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
javac.processorpath=\
    ${javac.classpath}
jnlp.signed=true
javac.target=9
annotation.processing.processors.list=
javadoc.noindex=false
javadoc.additionalparam=
includes=**
jnlp.mixed.code=default
build.classes.dir=${build.dir}/classes
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
javadoc.author=false
build.dir=build
jar.index=${jnlp.enabled}
build.test.classes.dir=${build.dir}/test/classes
platform.active=JDK_9
javac.compilerargs=
main.class=scoreboard.fx2.Main
dist.jar=${dist.dir}/Scoreboard.jar
jnlp.descriptor=application
javac.test.processorpath=${javac.test.classpath}
javadoc.use=true
build.sysclasspath=ignore
debug.test.classpath=${run.test.classpath}
dist.dir=dist
build.classes.excludes=**/*.java,**/*.form
javadoc.encoding=${source.encoding}
javadoc.splitindex=true
javac.source=9
application.vendor=jimc
junit.selected.version=3
debug.classpath=${run.classpath}
jar.archive.disabled=${jnlp.enabled}
run.jvmargs=
jar.compress=false
build.generated.dir=${build.dir}/generated
javac.test.classpath=\
    ${javac.classpath}:\
    ${libs.junit_4.classpath}:\
    ${libs.hamcrest.classpath}
javadoc.private=false
annotation.processing.run.all.processors=true
zip.exe="c\:\\Program Files\\7-zip\\7z.exe"
application.title=Scoreboard
meta.inf.dir=${src.dir}/META-INF
annotation.processing.enabled=true
manifest.file=manifest.mf
dist.javadoc.dir=${dist.dir}/javadoc
src.dir=src
endorsed.classpath=
jnlp.offline-allowed=false
mkdist.disabled=false
annotation.processing.enabled.in.editor=false
build.generated.sources.dir=${build.dir}/generated-sources
javadoc.version=false
javadoc.windowtitle=
javadoc.notree=false
jnlp.codebase.type=no.codebase
#
# Added to support creation of modular jar and jlink image.
# Change this property to match your JDK9 location
#
jdk9.basedir=C:\\Users\\jtconnor\\jdk-9
#
modular.jar.command=${jdk9.basedir}\\bin\\jar.exe
modular.jar.file=${dist.dir}\\${application.title}.jar
#
modular.jar.arg1=--verbose
modular.jar.arg2=--update
modular.jar.arg3=--file
modular.jar.arg4=${modular.jar.file}
modular.jar.arg5=--main-class
modular.jar.arg6=${main.class}
modular.jar.arg7=--module-version
modular.jar.arg8=1.0
modular.jar.arg9=-C
modular.jar.arg10=${build.dir}\\classes
modular.jar.arg11=module-info.class
modular.jar.args.concatenated=${modular.jar.arg1} ${modular.jar.arg2} ${modular.jar.arg3} ${modular.jar.arg4} ${modular.jar.arg5} ${modular.jar.arg6} ${modular.jar.arg7} ${modular.jar.arg8} ${modular.jar.arg9} ${modular.jar.arg10} ${modular.jar.arg11}
#
jlink.command=${jdk9.basedir}\\bin\\jlink.exe
jlink.module.dependency1=${modular.jar.file}
jlink.module.dependency2=${reference.com_jtconnors_socket.jar}
jlink.module.dependency3=${jdk9.basedir}\\jmods
jlink.module.path=${jlink.module.dependency1};${jlink.module.dependency2};${jlink.module.dependency3}
jlink.image.dir=${dist.dir}\\jimage
#
jlink.arg1=--module-path
jlink.arg2=${jlink.module.path}
jlink.arg3=--add-modules
jlink.arg4=${application.title}
jlink.arg5=--output
jlink.arg6=${jlink.image.dir}
jlink.arg7=--compress=2
jlink.args.concatenated=${jlink.arg1} ${jlink.arg2} ${jlink.arg3} ${jlink.arg4} ${jlink.arg5} ${jlink.arg6} ${jlink.arg7}
